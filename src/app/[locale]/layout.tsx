import type { Metadata } from "next";
import "./globals.css";
import Navbar from "@/components/navbar";
// import { useMessages } from "use-intl";
import { notFound } from "next/navigation";
import IntlProviderWrapper from "@/wrappers/IntlProviderWrapper";
// import { useMessages } from "next-intl";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: {
    locale: "en" | "pl";
  };
};

const LocaleLayout: React.FC<Props> = async ({ children, params }) => {
  const { locale } = await params;

  const routing = {
    locales: ["en", "pl"],
    defaultLocale: "en",
  };

  // Ensure that the incoming `locale` is valid
  if (!routing.locales.includes(locale)) {
    notFound();
  }

  // const messages = useMessages();
  const messages = (await import(`../../messages/${locale}.json`)).default;


  return (
    <html lang={locale}>
      <body>
        <IntlProviderWrapper locale={locale} messages={messages}>
          <Navbar />
          {children}
        </IntlProviderWrapper>
      </body>
    </html>
  );
};

export default LocaleLayout;
